{"version":3,"sources":["firebase_config.js","Todo.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","is_in_progress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","App","useState","todos","setTodos","todoInput","setTodoInput","useEffect","onSnapshot","querySnapshot","docs","map","data","className","flexDirection","justifyContent","alignItems","width","backgroundColor","TextField","label","variant","value","maxWidth","onChange","event","target","type","preventDefault","trim","length","alert","add","timestamp","FieldValue","serverTimestamp","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAUEA,IAASC,cATU,CACjBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKR,IAASS,Y,yBCRP,SAASC,EAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eAAgBC,EAAK,EAALA,GAWxD,OACI,sBAAKC,MAAO,CAACC,QAAQ,QAArB,UACK,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAcC,QAASP,EAAMQ,UAAYP,EAAiB,cAAgB,gBAE9E,eAACQ,EAAA,EAAD,CAAQC,QAdjB,WACIb,EAAGc,WAAW,SAASC,IAAIV,GAAIW,OAAO,CAClCZ,gBAAiBA,KAYhB,UAAqCA,EAAiB,OAAS,SAA/D,OACA,cAACQ,EAAA,EAAD,CAAQC,QATjB,WACIb,EAAGc,WAAW,SAASC,IAAIV,GAAIY,UAQ1B,kBC8DEC,MAzEf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,KAyCb,OArCAC,qBAAU,WAKNxB,EAAGc,WAAW,SAASW,YAAW,SAASC,GAC1CL,EACCK,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAS,CAC9BV,GAAIU,EAAIV,GACRF,KAAMY,EAAIc,OAAO1B,KACjBC,eAAgBW,EAAIc,OAAOzB,yBARhC,IAqCD,qBAAK0B,UAAU,MAAf,SAEC,sBAAKxB,MAAO,CAACC,QAAQ,OAAOwB,cAAc,SAASC,eAAgB,SAASC,WAAY,SAAUC,MAAO,QAAzG,UACA,oBAAI5B,MAAO,CAAE6B,gBAjDR,UAiDL,oBAED,iCAEA,cAAEC,EAAA,EAAF,CAAY/B,GAAG,iBAAiBgC,MAAM,gBAAgBC,QAAQ,WAAWC,MAAOjB,EAAWhB,MAAO,CAAC4B,MAAO,OAAQM,SAAU,QAASL,gBAAiB,SAAUM,SAZlK,SAA0BC,GACxBnB,EAAamB,EAAMC,OAAOJ,UAa1B,cAAC3B,EAAA,EAAD,CAAQgC,KAAO,SAASN,QAAQ,YAAYzB,QAhC9C,SAAiB6B,GACfA,EAAMG,iBAEuB,IAA1BvB,EAAUwB,OAAOC,OAClBC,MAAM,0BAGRhD,EAAGc,WAAW,SAASmC,IAAI,CACzB7C,gBAAgB,EAChB8C,UAAW1D,IAASS,UAAUkD,WAAWC,kBACvCjD,KAAMmB,IAIVC,EAAa,KAkBmDjB,MAAO,CAACC,QAAS,QAAjF,oBAIA,qBAAMD,MAAO,CAAC4B,MAAO,OAAQM,SAAU,QAAUa,UAAW,QAA5D,SACCjC,EAAMQ,KAAI,SAACzB,GAAD,OACX,cAACD,EAAD,CACAC,KAAMA,EAAKA,KACXC,eAAgBD,EAAKC,eACrBC,GAAIF,EAAKE,gBCjEbiD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69392147.chunk.js","sourcesContent":["import firebase from \"firebase\";\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDNUXne8qOnpGhRFue_DJnMPniMImyhhxo\",\n    authDomain: \"to-do-fecb0.firebaseapp.com\",\n    projectId: \"to-do-fecb0\",\n    storageBucket: \"to-do-fecb0.appspot.com\",\n    messagingSenderId: \"678704327676\",\n    appId: \"1:678704327676:web:748ceaadb5de74c9836079\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n\n  export{ db };","import { Button, ListItem, ListItemText } from \"@material-ui/core\";\nimport React from \"react\";\nimport { db } from \"./firebase_config\";\n\nexport default function TodoListItem({todo, is_in_progress, id}) {\n\n    function toggleInProgress(){\n        db.collection(\"todos\").doc(id).update({\n            is_in_progress: !is_in_progress\n        })\n    }\n\n    function deleteTodo(){\n        db.collection(\"todos\").doc(id).delete();\n    }\n    return (\n        <div style={{display:\"flex\"}}> \n             <ListItem>\n                 <ListItemText primary={todo} secondary={ is_in_progress ? \"In Progress\" : \"Completed\"}   />\n             </ListItem>\n             <Button onClick={toggleInProgress}>{ is_in_progress ? \"Done\" : \"Undone\"} </Button>\n             <Button onClick={deleteTodo}>X</Button>\n        </div>\n    );\n}\n","import React, { useState , useEffect } from \"react\";\nimport { Button, TextField } from '@material-ui/core';\nimport './App.css';\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo\";\n\nvar color=\"yellow\";\n\n\nfunction App() {\n  const [todos, setTodos ] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n  }, []); //blank to run only on first launch\n\n  function getTodos(){\n      db.collection(\"todos\").onSnapshot(function(querySnapshot){\n       setTodos(\n        querySnapshot.docs.map((doc)=> ({\n          id: doc.id,\n          todo: doc.data().todo,\n          is_in_progress: doc.data().is_in_progress,\n        }))\n       );\n      });\n  }\n\n  function addTodo(event){\n    event.preventDefault();\n\n    if(todoInput.trim().length===0){\n      alert(\" Try to type something\")\n    }\n    else{\n    db.collection(\"todos\").add({\n      is_in_progress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        todo: todoInput,\n    });  \n    }\n\n    setTodoInput(\"\");\n\n  }\n\n  function todoInputHandler(event){\n    setTodoInput(event.target.value);\n  }\n  return (\n\n    <div className=\"App\" >\n\n     <div style={{display:\"flex\",flexDirection:\"column\",justifyContent: \"center\",alignItems: \"center\", width: \"100%\" }}>\n     <h1 style={{ backgroundColor: color }}>TO_DO </h1> \n\n    <form>\n    \n    < TextField id=\"outlined-basic\" label=\"Write a to-do\" variant=\"outlined\" value={todoInput} style={{width: \"90vw\", maxWidth: \"500px\", backgroundColor: \"white\"}} onChange={todoInputHandler} />\n\n    <Button type = \"submit\" variant=\"contained\" onClick = {addTodo} style={{display: \"none\"}}>Add</Button>\n\n    </form>\n \n    <div  style={{width: \"90vw\", maxWidth: \"500px\" , marginTop: \"24px\", }} >\n    {todos.map((todo) => (\n    <TodoListItem \n    todo={todo.todo}\n    is_in_progress={todo.is_in_progress}\n    id={todo.id} />\n\n    ))}\n    </div>\n\n     </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}